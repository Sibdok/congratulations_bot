import config
from DataBase import Data
import telebot
from info import *
from gpt import *
from register_handlers import *
from fusion import *
import sqlite3
from datetime import datetime
import logging
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import os.path


bot = telebot.TeleBot(TOKEN)
Data().create_table(['id', 'user_id', 'user_name', 'user_role', 'tokens', 'request', 'task'], ['INTEGER PRIMARY KEY', 'INTEGER', 'TEXT', 'TEXT', 'INTEGER', 'INTEGER', 'TEXT'])

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    filename="log_file.txt",
    filemode="a",
    encoding='utf-8',
)


MAX_USERS = 50
MAX_TOKENS = 120

keyboard1 = telebot.types.ReplyKeyboardMarkup(True, True)
keyboard1.row('–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—ÉüñºÔ∏è').add("–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µüéâ").add("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–æ—Å—Çü•Ç").add("–ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω–∫—É—Ä—Åüéà")

def is_limit_users():
        global MAX_USERS
        connection = sqlite3.connect('/home/student/congratulations_bot/database.db')
        cursor = connection.cursor()
        result = cursor.execute('SELECT DISTINCT user_id FROM users_data;')
        count = 0 
        for i in result: 
            count += 1 
        connection.close()
        return count >= MAX_USERS  




@bot.message_handler(commands=["start"])
def welcome(message):
    user_id = message.from_user.id
    user_name = message.from_user.username
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id - {user_id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–º–∞–Ω–¥—É /start")

    exist_user=Data().select_from_table(['user_id'], ['user_id'], [str(user_id)])

    if exist_user==False:
        Data().insert_row(['user_id', 'user_name', 'user_role', 'tokens'], [user_id, user_name,'User', 0])
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id - {user_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ –∫–∞–∫ user")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!", reply_markup=keyboard1)
    logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å id - {user_id}")


@bot.message_handler(commands=["logs"])
def log_func(message):
    user_id = message.from_user.id
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id - {user_id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–º–∞–Ω–¥—É /log")
    user_role = Data().select_from_table(['user_role'], ['user_id'], [str(user_id)])
    if user_role == "Admin":
        doc = open('log_file.txt', 'rb')
        bot.send_document(message.chat.id, doc)
        logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å id - {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª —Å –ª–æ–≥–∞–º–∏")
    else:
        bot.send_message(message.chat.id, text="–ª–∏–≤–Ω–∏ –Ω–∞—Ö—É–π —Å –∂–∏–∑–Ω–∏")

    
register_handlers(bot)

@bot.message_handler(content_types=["text"])
def send_text(message):
    if message.text == config.adm_password:
        user_id = message.from_user.id
        user_name = message.from_user.username
        Data().update_in_table(['user_role'], ['Admin'], ['user_id'], [user_id])
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id - {user_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ –∫–∞–∫ admin")
        bot.send_message(message.chat.id, text="–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ admin")
    else:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º")

bot.polling()